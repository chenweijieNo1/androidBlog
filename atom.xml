<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>androidBlog</title>
  
  
  <link href="/androidBlog/atom.xml" rel="self"/>
  
  <link href="https://chenweijieno1.github.io/androidBlog/"/>
  <updated>2017-12-18T03:49:27.206Z</updated>
  <id>https://chenweijieno1.github.io/androidBlog/</id>
  
  <author>
    <name>Ericchen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WebViewStudy</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/12/18/WebViewStudy/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/12/18/WebViewStudy/</id>
    <published>2017-12-18T03:45:00.000Z</published>
    <updated>2017-12-18T03:49:27.206Z</updated>
    
    <content type="html"><![CDATA[<p>WebView 全方面的使用，JS交互、进度条、发短信、打电话、发邮件、上传图片、字体设置、视频全屏播放等<br><a href="https://github.com/youlookwhat/WebViewStudy" target="_blank" rel="external">WebView使用Demo</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WebView 全方面的使用，JS交互、进度条、发短信、打电话、发邮件、上传图片、字体设置、视频全屏播放等&lt;br&gt;&lt;a href=&quot;https://github.com/youlookwhat/WebViewStudy&quot; target=&quot;_blank&quot; rel=&quot;exter
      
    
    </summary>
    
      <category term="android常用知识" scheme="https://chenweijieno1.github.io/androidBlog/categories/android%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="android常用知识" scheme="https://chenweijieno1.github.io/androidBlog/tags/android%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>android解决输入法键盘遮盖布局问题</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/12/15/android%E8%A7%A3%E5%86%B3%E8%BE%93%E5%85%A5%E6%B3%95%E9%94%AE%E7%9B%98%E9%81%AE%E7%9B%96%E5%B8%83%E5%B1%80%E9%97%AE%E9%A2%98/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/12/15/android解决输入法键盘遮盖布局问题/</id>
    <published>2017-12-15T07:12:55.000Z</published>
    <updated>2017-12-15T07:16:15.306Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * addLayoutListener方法如下</div><div class="line">     * @param main 根布局</div><div class="line">     * @param scroll 需要显示的最下方View</div><div class="line">     */</div><div class="line">public void addLayoutListener(final View main, final View scroll) &#123;</div><div class="line">        main.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onGlobalLayout() &#123;</div><div class="line">                Rect rect = new Rect();</div><div class="line">                //1、获取main在窗体的可视区域</div><div class="line">                main.getWindowVisibleDisplayFrame(rect);</div><div class="line">                //2、获取main在窗体的不可视区域高度，在键盘没有弹起时，main.getRootView().getHeight()调节度应该和rect.bottom高度一样</div><div class="line">                int mainInvisibleHeight = main.getRootView().getHeight() - rect.bottom;</div><div class="line">                int screenHeight = main.getRootView().getHeight();//屏幕高度</div><div class="line">                RelativeLayout scrollView = (RelativeLayout) main.findViewById(R.id.input_panel);</div><div class="line">                //3、不可见区域大于屏幕本身高度的1/4：说明键盘弹起了</div><div class="line">                if (mainInvisibleHeight &gt; screenHeight / 4) &#123;</div><div class="line">                    int[] location = new int[2];</div><div class="line">                    scroll.getLocationInWindow(location);</div><div class="line">                    // 4、获取Scroll的窗体坐标，算出main需要滚动的高度</div><div class="line">                    int srollHeight = (location[1] + scroll.getHeight()) - rect.bottom;</div><div class="line">                    //5、让界面整体上移键盘的高度</div><div class="line">                    if (viewScrollReset) &#123;</div><div class="line">                        scrollView.scrollTo(0, srollHeight + 10);</div><div class="line">                        viewScrollReset = false;</div><div class="line">                    &#125;</div><div class="line">                &#125; else &#123;</div><div class="line">                    //3、不可见区域小于屏幕高度1/4时,说明键盘隐藏了，把界面下移，移回到原有高度</div><div class="line">                    scrollView.scrollTo(0, 0);</div><div class="line">                    viewScrollReset = true;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代码如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div cla
      
    
    </summary>
    
      <category term="android常见问题" scheme="https://chenweijieno1.github.io/androidBlog/categories/android%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="android常见问题" scheme="https://chenweijieno1.github.io/androidBlog/tags/android%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Markdown的常用语法</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/12/15/Markdown%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/12/15/Markdown的常用语法/</id>
    <published>2017-12-15T06:17:11.000Z</published>
    <updated>2017-12-15T06:53:44.409Z</updated>
    
    <content type="html"><![CDATA[<p>注意：Markdown使用#、+、*等符号来标记， 符号后面必须跟上至少1个空格才有效！</p><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>在Markdown当中设置标题，有两种方式：<br>第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。<br>第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）</p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>支持有序列表和无序列表</p><p>无序列表使用-、+和*作为列表标记</p><p>有序列表则使用数字加英文句点.来表示<br><a id="more"></a></p><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>引用以&gt;来表示，引用中支持多级引用、标题、列表、代码块、分割线等常规语法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&gt; 这是一段引用    //在`&gt;`后面有 1 个空格</div><div class="line">&gt; </div><div class="line">&gt;     这是引用的代码块形式    //在`&gt;`后面有 5 个空格</div><div class="line">&gt;     </div><div class="line">&gt; 代码例子：</div><div class="line">&gt;   </div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&gt; 一级引用</div><div class="line">&gt; &gt; 二级引用</div><div class="line">&gt; &gt; &gt; 三级引用</div><div class="line"></div><div class="line">&gt; #### 这是一个四级标题</div><div class="line">&gt; </div><div class="line">&gt; 1. 这是第一行列表项</div><div class="line">&gt; 2. 这是第二行列表项</div></pre></td></tr></table></figure><h4 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h4><blockquote><p>两个<em>或-代表加粗，一个</em>或-代表斜体，<del>代表删除</del> </p></blockquote><h4 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h4><p>图片与链接的语法很像，区别在一个 ! 号。二者格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">图片：![]()    ![图片文本(可忽略)](图片地址)</div><div class="line">链接：[]()     [链接文本](链接地址)</div></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>代码分为行内代码和代码块。</p><p>行内代码使用 <code>代码</code> 标识，可嵌入文字中</p><p>代码块使用4个空格或```标识</p><p>代码语法高亮在 ```后面加上空格和语言名称即可</p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>表格对齐格式：</p><p>居左：:—-<br>居中：:—-:或—–<br>居右：—-:</p><p>例子：</p><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">居左测试文本</td><td style="text-align:center">居中测试文本</td><td style="text-align:right">居右测试文本</td></tr><tr><td style="text-align:left">居左测试文本1</td><td style="text-align:center">居中测试文本2</td><td style="text-align:right">居右测试文本3</td></tr><tr><td style="text-align:left">居左测试文本11</td><td style="text-align:center">居中测试文本22</td><td style="text-align:right">居右测试文本33</td></tr><tr><td style="text-align:left">居左测试文本111</td><td style="text-align:center">居中测试文本222</td><td style="text-align:right">居右测试文本333</td></tr></tbody></table><h4 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h4><p>一行中用三个以上的*、-、_来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。</p><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>在行尾添加两个空格加回车表示换行</p><p>参考自：<a href="http://www.jianshu.com/p/82e730892d42" target="_blank" rel="external">Markdown的常用语法(个人总结)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注意：Markdown使用#、+、*等符号来标记， 符号后面必须跟上至少1个空格才有效！&lt;/p&gt;
&lt;h4 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h4&gt;&lt;p&gt;在Markdown当中设置标题，有两种方式：&lt;br&gt;第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。&lt;br&gt;第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）&lt;/p&gt;
&lt;h4 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h4&gt;&lt;p&gt;支持有序列表和无序列表&lt;/p&gt;
&lt;p&gt;无序列表使用-、+和*作为列表标记&lt;/p&gt;
&lt;p&gt;有序列表则使用数字加英文句点.来表示&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Markdown" scheme="https://chenweijieno1.github.io/androidBlog/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://chenweijieno1.github.io/androidBlog/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo发布博客引用自带图片的方法</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/12/15/Hexo%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E8%87%AA%E5%B8%A6%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/12/15/Hexo发布博客引用自带图片的方法/</id>
    <published>2017-12-15T02:34:32.000Z</published>
    <updated>2017-12-15T02:48:10.358Z</updated>
    
    <content type="html"><![CDATA[<p>有两种方法，第一种是不用插件的情况，第二种是使用一种hexo的插件。无论哪种方法都有一个共同的前提：修改_config.yml配置文件post_asset_folder项为true。</p><p>创建博客必须使用命令创建：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div><div class="line">其中的layout项可以省略，例如：</div><div class="line">hexo new &quot;这是一个新的博客&quot;</div></pre></td></tr></table></figure></p><p>使用完命令之后，在source/_post文件夹里面就会出现一个“这是一个新的博客.md”的文件和一个“这是一个新的博客”的文件夹。<br>下一步就是把需要的图片放到新创建的那个文件夹里面去。</p><p>最后有两种方式来引用图片：<br><a id="more"></a></p><p>第一种方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% asset_img 这是一个新的博客的图片.jpg 这是一个新的博客的图片的说明 %&#125;</div></pre></td></tr></table></figure></p><p>用此种方法，而不是以前的<img src="" alt="">方法，前提是你的hexo的版本是hexo3以上，到package.json里面看一下吧。如果不是hexo3以上的版本，那就只能用第二种方法了：hexo插件的方法</p><p>插件的<a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="external">链接</a></p><p>安装：npm install hexo-asset-image –save</p><p>之后就可以按照正常的方法使用的，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">我现在写了一个段落，并且想在这个段落的某一个地方[图片上传失败...(image-43fc5f-1510018038370)]引入一张图片</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">我现在写了一个段落，并且想在这个段落的某一个地方[图片上传失败...(image-f9b1fb-1510018038370)]引入一张图片</div></pre></td></tr></table></figure><p>此两种方法除了操作有些区别之外，在图片的显示上也略有不同，第一种的图片信息是会显示出来的，而第二种中括号里面的信息是不会显示的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有两种方法，第一种是不用插件的情况，第二种是使用一种hexo的插件。无论哪种方法都有一个共同的前提：修改_config.yml配置文件post_asset_folder项为true。&lt;/p&gt;
&lt;p&gt;创建博客必须使用命令创建：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo new [layout] &amp;lt;title&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;其中的layout项可以省略，例如：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo new &amp;quot;这是一个新的博客&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用完命令之后，在source/_post文件夹里面就会出现一个“这是一个新的博客.md”的文件和一个“这是一个新的博客”的文件夹。&lt;br&gt;下一步就是把需要的图片放到新创建的那个文件夹里面去。&lt;/p&gt;
&lt;p&gt;最后有两种方式来引用图片：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://chenweijieno1.github.io/androidBlog/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://chenweijieno1.github.io/androidBlog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio Git .gitignore操作</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/12/15/Android-Studio-Git-gitignore%E6%93%8D%E4%BD%9C/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/12/15/Android-Studio-Git-gitignore操作/</id>
    <published>2017-12-15T02:26:36.000Z</published>
    <updated>2017-12-15T02:31:17.775Z</updated>
    
    <content type="html"><![CDATA[<p>在push项目到GitHub的时候，忽略这些文件需要做的步骤如下：<br>  1.在项目目录下找到.gitignore文件（一般有两个地方存在该文件：一是根目录下，一是app目录下），如果没有找到该文件就创建一个 。该文件主要写明需要忽略的文件。<br>  2.对于Android项目来说，有一个标准的需要忽略的文件（当然，也可以根据自己的项目而定），在GitHub上去下载Android.gitignore文件。下面为Android.gitignore文件的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&lt;span style=&quot;font-size:14px;&quot;&gt;# Built application files</div><div class="line">*.apk</div><div class="line">*.ap_</div><div class="line"></div><div class="line"># Files for the Dalvik VM</div><div class="line">*.dex</div><div class="line"></div><div class="line"># Java class files</div><div class="line">*.class</div><div class="line"></div><div class="line"># Generated files</div><div class="line">bin/</div><div class="line">gen/</div><div class="line">out/</div><div class="line"></div><div class="line"># Gradle files</div><div class="line">.gradle/</div><div class="line">build/</div><div class="line"></div><div class="line"># Local configuration file (sdk path, etc)</div><div class="line">local.properties</div><div class="line"></div><div class="line"># Proguard folder generated by Eclipse</div><div class="line">proguard/</div><div class="line"></div><div class="line"># Log Files</div><div class="line">*.log</div><div class="line"></div><div class="line"># Android Studio Navigation editor temp files</div><div class="line">.navigation/</div><div class="line"></div><div class="line"># Android Studio captures folder</div><div class="line">captures/</div><div class="line"></div><div class="line"># Intellij</div><div class="line">*.iml</div><div class="line"></div><div class="line"># Keystore files</div><div class="line">*.jks&lt;/span&gt;</div></pre></td></tr></table></figure></p><a id="more"></a><p>它主要的写法规则为：”#”表示注释，”*”表示通配符，可多个，”/“表示目录，”!”表示不忽略匹配到的文件或目录，”?”表示通配单个字符，”[]”表示包含单个字符的匹配列表。</p><p> 3.git命令操作</p> <img src="/androidBlog/2017/12/15/Android-Studio-Git-gitignore操作/gititnore1.png" alt="gititnore1.png" title=""> <img src="/androidBlog/2017/12/15/Android-Studio-Git-gitignore操作/gititnore2.png" alt="gititnore2.png" title=""><p>接下来只需git add. ，git commit -m “comment” ，git push就行了（注意在app目录下也有需要忽略的文件）。这样上传到GitHub上的项目就忽略了不需要进行版本控制的文件。另外，从GitHub上Download下来的这个项目，在导入Android Studio中时，应该使用Import Project。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在push项目到GitHub的时候，忽略这些文件需要做的步骤如下：&lt;br&gt;  1.在项目目录下找到.gitignore文件（一般有两个地方存在该文件：一是根目录下，一是app目录下），如果没有找到该文件就创建一个 。该文件主要写明需要忽略的文件。&lt;br&gt;  2.对于Android项目来说，有一个标准的需要忽略的文件（当然，也可以根据自己的项目而定），在GitHub上去下载Android.gitignore文件。下面为Android.gitignore文件的内容：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;span style=&amp;quot;font-size:14px;&amp;quot;&amp;gt;# Built application files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.apk&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.ap_&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Files for the Dalvik VM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.dex&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Java class files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.class&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Generated files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bin/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gen/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;out/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Gradle files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.gradle/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;build/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Local configuration file (sdk path, etc)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;local.properties&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Proguard folder generated by Eclipse&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;proguard/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Log Files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.log&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Android Studio Navigation editor temp files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.navigation/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Android Studio captures folder&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;captures/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Intellij&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.iml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Keystore files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*.jks&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://chenweijieno1.github.io/androidBlog/categories/git/"/>
    
    
      <category term="git" scheme="https://chenweijieno1.github.io/androidBlog/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git操作命令集合</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/10/30/git%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/10/30/git操作命令/</id>
    <published>2017-10-30T02:01:52.674Z</published>
    <updated>2017-12-18T02:14:24.745Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>克隆#  git clone 仓库地址<br>克隆指定分支#   git clone -b 分支名 仓库地址<br>切换到某个分支#  git branch 分支名<br>把修改文件添加到本地暂存区#  git add .<br>合并到当前分支#  git merge 分支名<br>提交修改文件#  git commit -m “修改内容”<br>更新#  git pull<br>提交到远程分支#  git push origin 分支名</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;p&gt;克隆#  git clone 仓库地址&lt;br&gt;克隆指定分支#   git clone -b 分支名 仓库地址&lt;br&gt;切换到某个分支#  git branch 分支名&lt;br&gt;把修改文件添加到本地暂存区#  git add .&lt;br&gt;合并到当前分支#  git merge 分支名&lt;br&gt;提交修改文件#  git commit -m “修改内容”&lt;br&gt;更新#  git pull&lt;br&gt;提交到远程分支#  git push origin 分支名&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://chenweijieno1.github.io/androidBlog/categories/git/"/>
    
    
      <category term="git" scheme="https://chenweijieno1.github.io/androidBlog/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github搭建属于自己的博客</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/10/26/hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/10/26/hexo使用攻略/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2017-10-27T08:51:42.240Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>平时我们会写写文章，偶尔看到一些精彩的东西会做点记录，但是会经常乱放，要用到时找起来麻烦，有时会忘记放在哪了，所以想着搭建一个博客来记录这些东西，现在大家使用Hexo比较多，因此该文章主要介绍如何搭建Hexo，以及搭建过程中出现的一些问题，最后列出一些常用的命令.</p><p><a href="http://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="external">http://www.cnblogs.com/visugar/p/6821777.html</a></p><p>常见问题：<br><a href="http://blog.csdn.net/nathan1987_/article/details/50322493" target="_blank" rel="external">http://blog.csdn.net/nathan1987_/article/details/50322493</a></p><p>使用命令：<br><a href="http://www.jianshu.com/p/3a8dba06856a" target="_blank" rel="external">http://www.jianshu.com/p/3a8dba06856a</a></p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;平时我们会写写文章，偶尔看到一些精彩的东西会做点记录，但是会经常乱放，要用到时找起来麻烦，有时会忘记放在哪了，所以想着搭建一个博客来记录这些东西，现在大家使用Hexo比较多，因此该文章主要介绍如何搭建Hexo，以及搭建过程中出现的一些问题，最后列出一些常用的命令.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/visugar/p/6821777.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/visugar/p/6821777.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常见问题：&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/nathan1987_/article/details/50322493&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/nathan1987_/article/details/50322493&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用命令：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/3a8dba06856a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/3a8dba06856a&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://chenweijieno1.github.io/androidBlog/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://chenweijieno1.github.io/androidBlog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>系统集成项目管理工程师知识点记录</title>
    <link href="https://chenweijieno1.github.io/androidBlog/2017/10/26/%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9F%A5%E8%AF%86%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    <id>https://chenweijieno1.github.io/androidBlog/2017/10/26/系统集成项目管理工程师知识点记录/</id>
    <published>2017-10-25T16:00:00.000Z</published>
    <updated>2017-11-10T08:02:09.090Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、请简要叙述合同索赔流程"><a href="#1、请简要叙述合同索赔流程" class="headerlink" title="1、请简要叙述合同索赔流程"></a>1、请简要叙述合同索赔流程</h3><ol><li>在索赔事项发生后的28天以内，以书面的索赔通知书形式向甲公司提出索赔要求；</li><li>在索赔通知书发出后的28天内，向甲公司报送补偿经济拔失的索赔报告及有关资料；</li><li>甲公司给予答复，对于不同意的，可要求乙部门进一步补充索赔理由和证据；</li><li>甲公司在收到索赔报告的有关资料后28天未予答复，表示认同索赔；</li><li>如果索赔事件持续进行时，乙部门应当阶段性向甲公司发出索赔意向，在索赔 事件终了后28天内，向甲公司送交索赔的有关资料和最终索赔报告；</li><li>甲公司或乙部门不能接受索赔结果的，可进入仲裁或诉讼程序；</li></ol><a id="more"></a><p>总结来说，就如下流程：提出索赔要求-&gt;报送索赔资料-&gt;监理工程师答复-&gt;监理工程师逾期答复后果-&gt;持续索赔-&gt;仲裁与诉讼</p><p>注意点：双方直接签证补充协议的做法是不正确的。在政府釆购法中明确要求追加项目不得超过原合总金额的10%</p><h3 id="2、简述范围变更控制的基本流程"><a href="#2、简述范围变更控制的基本流程" class="headerlink" title="2、简述范围变更控制的基本流程"></a>2、简述范围变更控制的基本流程</h3><ol><li>编写范围说明书，进行范围确认，建立基线。 </li><li>需求变更以书面的规定格式提出，提交给CCB。 </li><li>CCB对变更申请进行论证、评估，评估对项目的进度、成本、质量等影响大小。 </li><li>需求变更以书面的方式获得通过，并修改进度计划、成本计划等，未获通过的给出原因。</li><li>分派给项目组进行变更的实施。并通知所有相关干系人。</li><li>监督并控制变更的实施过程，处理产生的问题。 </li><li>定期评估变更对项目绩效的影响，作为历史数据归入组织过程资产，有利于以后的评估准确。</li></ol><p>注意：对范围变更进行控制是，要以工作分解结构、项目进展报告、变更请求和范围管理计划为依据。进行范围变更控制必须经过范围变更控制系统。</p><p>根据项目范围变更的流程，首先要提出项目变更请求，然后由项目利益相关人根据变更对项目影响（时间、成本等）进行决策变更，决定是否接受变更。如果不接受变更，则反馈给变更请求人，并说明不接受的原因。如果接受变更，则需要按照变更的流程，更新相应的计划和文档，实施范围变更。最后应对变更进行评审。</p><p>成本变更控制系统公司一种项目成本控制的程序性方法，主要通过建立项目成本变更控制体系对项目成本进行控制。该系统主要包括3个部分，分别是成本变更申请、批准成本变更申请和变更项目成本预算。</p><h3 id="3、项目可行性研究的主要步骤"><a href="#3、项目可行性研究的主要步骤" class="headerlink" title="3、项目可行性研究的主要步骤"></a>3、项目可行性研究的主要步骤</h3><ol><li>初步可行性研究</li><li>详细可行性研究</li><li>项目综合论证</li><li>项目可行性评估</li><li>项目可行性研究报告编写、提交和获得批准</li></ol><h3 id="4、关键路径分析和总时差、自由时差计算"><a href="#4、关键路径分析和总时差、自由时差计算" class="headerlink" title="4、关键路径分析和总时差、自由时差计算"></a>4、关键路径分析和总时差、自由时差计算</h3><p>详细知识请参考：<a href="http://blog.csdn.net/moshengtan/article/details/13001751" target="_blank" rel="external">http://blog.csdn.net/moshengtan/article/details/13001751</a></p><p>如何计算ES,EF,LS,LF？<br>前推法来计算最早时间   某一活动的最早开始时间（ES）=指向它的所有紧前活动的最早结束时间的最大值。   某一活动的最早结束时间（EF）=ES+T（作业时间）  逆推法来计算最迟时间   某一活动的最迟结束时间（LF）=指向它的所有紧后活动的最迟开始时间的最小值。   某一活动的最迟开始时间（LS）=LF-T（作业时间）</p><p>总时差与自由时差的区别？<br>总时差是指在不延误项目完成日期或违反进度因素的前提下，某活动可以推迟的时间。  总时差=LS-ES=LF-EF<br>自由时差是指在不影响紧后活动最早开始的情况下，当前活动可以推迟的时间。   自由时差=(后一活动)ES-(前一活动的)EF    所以总时差影响总工期，自由时差影响紧后活动。</p><p>计算关键路径的步骤：</p><ol><li>用有方向的线段标出各结点的紧前活动和紧后活动的关系，使之成为一个有方向的网络图（PDM）   </li><li>用正推和逆推法计算出各个活动的ES,LS,EF,LF，并计算出各个活动的自由时差。找出所有总时差为零或为负的活动，就是关键活动。  </li><li>关键路径上的活动持续时间决定了项目的工期，总和就是项目工期。</li></ol><h3 id="5、信息系统工程监理活动的主要内容括"><a href="#5、信息系统工程监理活动的主要内容括" class="headerlink" title="5、信息系统工程监理活动的主要内容括"></a>5、信息系统工程监理活动的主要内容括</h3><p>“四控、三管、一协调”：<br>四控：进度控制、质量控制、成本控制、变更控制<br>三管：合同管理、安全管理、文档管理<br>一协调：沟通与协调业主、承建方、设备和材料供应商之间的关系</p><h3 id="6、信息系统集成项目的验收工作步骤"><a href="#6、信息系统集成项目的验收工作步骤" class="headerlink" title="6、信息系统集成项目的验收工作步骤"></a>6、信息系统集成项目的验收工作步骤</h3><p>系统测试 -&gt; 系统的试运行  -&gt; 系统的文档验收  -&gt; 项目的最终验收报告</p><h3 id="7、招标文件"><a href="#7、招标文件" class="headerlink" title="7、招标文件"></a>7、招标文件</h3><p>招标文件应当包括招标项目的技术要求、对投标人资格审查的标准、投标报价要求和评标标准等所有实质性要求和条件，以及拟签订合同的主要条款。</p><h3 id="8、项目范围管理活动"><a href="#8、项目范围管理活动" class="headerlink" title="8、项目范围管理活动"></a>8、项目范围管理活动</h3><p>编制范围管理计划、范围定义、创建工作分解结构、范围确认、范围控制</p><h3 id="9、挣值管理法中的PV、EV、AC、SV、CV、SPI、CPI"><a href="#9、挣值管理法中的PV、EV、AC、SV、CV、SPI、CPI" class="headerlink" title="9、挣值管理法中的PV、EV、AC、SV、CV、SPI、CPI"></a>9、挣值管理法中的PV、EV、AC、SV、CV、SPI、CPI</h3><p>PV：计划值，在即定时间点前计划完成活动或WBS组件工作的预算成本。<br>    记忆技巧：PLaned，计划，Value，数值，简写是PV </p><p>AC：实际成本，在即定时间段内实比分完成工作发生的实际总成本。<br>    记忆技巧：Actual，实际的，cost，成本，简写是AC </p><p>EV：挣值，在即定时间段内实际完工工作的预算成本。<br>    记忆技巧：Earn，挣，Value，数值，简写的EV</p><p> 以下以公式中，以S开头的缩写，都是表示进度的，schedule。以C开头的缩写，都是表示成本的，cost。而且有一个规律，计算公式都是EV开头；偏差是用减法，即然是减法，那么肯定也是跟0比较；指数是用除法，那么也肯定是跟1比较。</p><p> 进度偏差SV＝EV－PV，即然是进度方面的偏差，计算的肯定是进度方面的内容，那么上面两个参数PV、AC那个是跟进度有关系呢？肯定是PV计划值了，所以公式SV＝EV－PV的记忆就出来了。SV&gt;0，进度超前，SV&lt;0，进度落后。 </p><p> 成本偏差CV＝EV－AC，同上道理，成本方面的偏差，计算的也肯定是成本方面的内容，那么上面两个参数PV、AC那个是跟成本有关系的呢？肯定是AC实际成本了。所以公式CV＝EV－AC的记忆也出来了。CV&gt;0，成本节约，CV&lt;0，成本超支。 </p><p> 进度绩效指数SPI＝EV/PV，也好理解了，S开头的缩写，肯定是关于进度方面指数了，公式以EV作为开头的，SPI＝1，进度与计划相符，SPI&gt;1，进度超前，SPI&lt;1，进度落后。</p><p> 成本绩效指数CPI＝EV/AC，C开头的缩写，关于成本方面指数，公式以EV开头，CPI＝1，资金使用效率一般；CPI&gt;1成本节约，资金使用效率高；CPI&lt;1，成本超支，资金使用效率低。</p><h3 id="10、项目成本管理的过程"><a href="#10、项目成本管理的过程" class="headerlink" title="10、项目成本管理的过程"></a>10、项目成本管理的过程</h3><p> 制定成本管理计划、成本估算、成本预算、成本控制</p><h3 id="11、质量的定义"><a href="#11、质量的定义" class="headerlink" title="11、质量的定义"></a>11、质量的定义</h3><p> 国际标准化组织： 反应实体满足主体明确和隐含需求的能力的特性总和；<br> 国家标准：一组固有特性满足要求的程度<br> 从用户角度：质量是对一个产品（包括相关的服务）满足程度的度量，是产品或服务的生命</p><h3 id="12、项目人力资源管理的过程"><a href="#12、项目人力资源管理的过程" class="headerlink" title="12、项目人力资源管理的过程"></a>12、项目人力资源管理的过程</h3><p> 1、编制人力资源计划<br> 2、组建项目团队<br> 3、建设项目团队<br> 4、管理项目团队</p><h3 id="13、项目整体管理的主要过程"><a href="#13、项目整体管理的主要过程" class="headerlink" title="13、项目整体管理的主要过程"></a>13、项目整体管理的主要过程</h3><p>项目整体管理师项目管理中一项综合性盒全局性的管理工作。项目整体管理知识域包括保证项目各要素相互协调所需要的各个过程。具体地讲，项目整体管理知识域包括标识、定义、结合、统一和协调项目管理过程组中的不同过程和活动所需要的过程和活动。项目整体管理应确保项目所有的组成要素在正确的时间结合在一起，以成功完成项目。<br>  项目整体管理与其他的项目单项管理（如项目进度管理、项目成本管理等）相比，具有综合性、全局性和系统性的特点。<br>  项目管理中整体管理的过程包括制定项目章程、制定项目范围说明书（初步）、制定项目管理计划、指导和管理项目执行、监督和控制项目工作、整体变更控制、项目收尾。</p><h3 id="14、项目计划过程"><a href="#14、项目计划过程" class="headerlink" title="14、项目计划过程"></a>14、项目计划过程</h3><p>项目规划—范围定义—活动定义—活动历时估算<br>项目范围管理包括的过程依序排列为范围计划制定（或称范围规划）、范围定义、创建工作分解结构、范围核实、范围变更控制。<br>  项目时间管理包括的过程排列为活动定义、活动排序、活动资源估算、活动历时估算、制定进度计划、进度计划控制。<br>  一般情况下，应先确定项目的范围，然后再此基础上再对项目的时间进行管理。 </p><h3 id="15"><a href="#15" class="headerlink" title="15"></a>15</h3><p>项目范围说明书包括项目和范围的目标、产品或服务的需求的特性、项目的边界、产品接受标准、项目约束条件、项目假设、最初的项目组织、最初定的风险、进度里程碑、费用估算的量级要求、项目配置管理的需求已批准的需求。</p><h3 id="16"><a href="#16" class="headerlink" title="16"></a>16</h3><p> 项目范围管理计划是范围计划编制过程的一个输出，规定了如何定义、检验、控制范围和创建与定义WBS，指导项目管理团队应如何管理项目的范围。<br> WBS是组织管理工作的主要依据，是项目管理工作的基础。这些项目管理工作包括定义工作范围、定义项目组织、设定项目产品的质量和规格、估算和控制费用以及估算时间周期和安排进度，因此，这些项目管理工作也是创建WBS的目标。WBS分解越准确，对进度和成本的估算也就越准确，越能促进明确分工。同时，WBS和WBS字典构成了项目的范围基线。<br> WBS具有以下4个用途：<br> 1、WBS是一个描述思路的规划和设计工具，能够帮助项目经理和项目团队确定和有效地管理项目的工作。<br> 2、WBS是一个清晰地表示各项目工作之间的相互联系的结构设计工具。<br> 3、WBS是一个展现项目全貌，并且详细说明了为完成项目所必须完成的各项工作的计划工具。<br> 4、WBS定义的里程碑事件，可以向高级管理层和客户报告项目的完成情况，是项目状况的报告工具</p><h3 id="17-项目进度网络图"><a href="#17-项目进度网络图" class="headerlink" title="17 项目进度网络图"></a>17 项目进度网络图</h3><p>项目进度控制的过程大致为活动定义、活动排序、活动资源估算、活动历时估算、进度计划的制定、进度控制<br>在项目管理中，首先通过对项目活动进行排序，得到项目进度网络图。再根据项目进度网络图找到项目的关键路径，从而制定项目的进度计划。由此可见，项目进度网络图是活动排序的结果和进度计划编制的输入。</p><h3 id="18"><a href="#18" class="headerlink" title="18"></a>18</h3><p>缩短项目进度的技术主要如下：<br>1、变更项目范围：主要是指缩小项目的范围<br>2、赶工：是一种通过分配很多的资源，达到以成本的最低增加和进度的最大限度压缩的目的，它不改变活动之间的顺序。<br>3、快速追踪：也叫快速跟进，是指并行或重叠执行原来计划串行执行的活动，会改变工作网络图原来的顺序</p><h3 id="19"><a href="#19" class="headerlink" title="19"></a>19</h3><p>一般来说，项目活动间存在以下4个依赖关系。<br>1、结束—开始（FS型）：某活动必须结束，另一活动才能开始<br>2、结束—结束（FF型）：某活动结束前，另一活动必须结束<br>3、开始—结束（SF型）：某活动结束前另一活动必须开始<br>4、开始—开始（SS型）：某活动必须在另一活动开始前开始</p><p>在某个信息系统项目中，存在新老系统切换问题。在设置项目计划网络图时，新系统上线和老系统下线之间应设置成开始-结束的关系</p><h3 id="20-活动的期望时间"><a href="#20-活动的期望时间" class="headerlink" title="20 活动的期望时间"></a>20 活动的期望时间</h3><p>活动的期望时间=（最乐观时间+4*最可能时间+最悲观时间）/6</p><h3 id="21"><a href="#21" class="headerlink" title="21"></a>21</h3><p>管理项目团队是项目人力资源管理的内容之一，其工具及技术包括如下内容：观察和对话、项目绩效评估、冲突管理、问题日志</p><h3 id="22"><a href="#22" class="headerlink" title="22"></a>22</h3><p>《中华人民共和国合同法》第五十二条规定，有下列情形之一的，合同无效：<br>1、一方以欺诈、胁迫的手段订立合同，损害国家利益的；<br>2、恶意串通，损害国家、集体或者第三人利益的<br>3、以合法形式掩盖非法目的的；<br>4、损害社会公共利益的<br>5、违反法律、行政法规的强制性规定的</p><h3 id="23-应对风险的3项基本原则"><a href="#23-应对风险的3项基本原则" class="headerlink" title="23 应对风险的3项基本原则"></a>23 应对风险的3项基本原则</h3><p>规避、接受、减轻</p><p>在项目风险管理的基本流程中，包括以下6项主要活动<br>编制风险管理计划：确定项目中风险管理活动的步骤<br>识别风险：确定项目中可能存在的风险<br>风险定性分析：通过对风险的发生概率和潜在影响排定风险的优先级，作为后续分析的准备<br>风险定量分析：量化风险分析对项目目标的影响<br>编制风险应对策略：制定相应的策略，减轻风险对项目目标的影响<br>风险跟踪和监控：跟踪并监控识别出的风险，执行风险应对策略，并评估其再整个项目生命周期中的效果<br>风险规避措施是编制风险应对计划的一项输出，不属于风险管理基本流程中的活动。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、请简要叙述合同索赔流程&quot;&gt;&lt;a href=&quot;#1、请简要叙述合同索赔流程&quot; class=&quot;headerlink&quot; title=&quot;1、请简要叙述合同索赔流程&quot;&gt;&lt;/a&gt;1、请简要叙述合同索赔流程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在索赔事项发生后的28天以内，以书面的索赔通知书形式向甲公司提出索赔要求；&lt;/li&gt;
&lt;li&gt;在索赔通知书发出后的28天内，向甲公司报送补偿经济拔失的索赔报告及有关资料；&lt;/li&gt;
&lt;li&gt;甲公司给予答复，对于不同意的，可要求乙部门进一步补充索赔理由和证据；&lt;/li&gt;
&lt;li&gt;甲公司在收到索赔报告的有关资料后28天未予答复，表示认同索赔；&lt;/li&gt;
&lt;li&gt;如果索赔事件持续进行时，乙部门应当阶段性向甲公司发出索赔意向，在索赔 事件终了后28天内，向甲公司送交索赔的有关资料和最终索赔报告；&lt;/li&gt;
&lt;li&gt;甲公司或乙部门不能接受索赔结果的，可进入仲裁或诉讼程序；&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="系统集成项目管理工程师" scheme="https://chenweijieno1.github.io/androidBlog/categories/%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="系统集成项目管理工程师" scheme="https://chenweijieno1.github.io/androidBlog/tags/%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
  </entry>
  
</feed>
